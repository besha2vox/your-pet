{"version":3,"file":"static/js/330.7858e92f.chunk.js","mappings":"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","sources":["shared/components/LoginForm/LoginForm.styled.jsx","shared/components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const LogInForm = styled.form`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const LogInFormTitle = styled.h1`\n  font-weight: 500;\n  font-size: 36px;\n  line-height: 1.36;\n  color: ${({ theme }) => theme.colors.black};\n  margin-bottom: 40px;\n\n  @media screen and (max-width: 767px) {\n    font-size: 24px;\n    line-height: 1.38;\n  }\n`;\n\nexport const LogInFormEmailContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  margin-bottom: ${({ error }) => (error ? '6px' : '32px')};\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: ${({ error }) => (error ? '1px' : '24px')};\n  }\n`;\n\nexport const LogInFormEmailInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2px 16px;\n\n  border: 1px solid\n    ${({ theme, error }) => (error ? theme.colors.red : theme.colors.blue)};\n  border-radius: 40px;\n`;\n\nexport const LogInFormPasswordContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  margin-bottom: ${({ error }) => (error ? '6px' : '32px')};\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: ${({ error }) => (error ? '1px' : '24px')};\n  }\n`;\n\nexport const LogInFormPasswordInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2px 16px;\n\n  border: 1px solid\n    ${({ theme, error }) => (error ? theme.colors.red : theme.colors.blue)};\n  border-radius: 40px;\n`;\n\nexport const LogInFormInput = styled(Field)`\n  padding: 12px 0;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n\n  width: 100%;\n  height: 48px;\n  border: none;\n  outline: none;\n`;\n\nexport const ErrorIcon = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n\n  & svg {\n    stroke: ${({ theme }) => theme.colors.red};\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n  padding-left: 16px;\n  margin-top: 4px;\n  color: ${({ theme }) => theme.colors.red};\n`;\n\nexport const PasswordIcon = styled.span`\n  display: flex;\n  align-items: center;\n`;\n\nexport const EyeIcon = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n\n  & svg {\n    stroke: ${({ theme, error }) =>\n      error ? theme.colors.red : theme.colors.blue};\n  }\n`;\n\nexport const LoginErrorMessage = styled.div`\n  padding: 15px 16px 0 16px;\n  color: ${({ theme }) => theme.colors.red};\n`;\n\nexport const LogInBtn = styled.button`\n  margin-top: 13px;\n  margin-bottom: 20px;\n  width: 100%;\n\n  padding: 10px 0 10px 0;\n\n  background: ${({ theme }) => theme.colors.blue};\n  border: none;\n  border-radius: 40px;\n\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 1.35;\n\n  letter-spacing: 0.04em;\n\n  color: #ffffff;\n\n  @media screen and (max-width: 767px) {\n    margin-top: 41px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const RegisterText = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.3;\n  letter-spacing: 0.04em;\n  color: ${({ theme }) => theme.colors.grey};\n`;\n\nexport const RegisterLink = styled.a`\n  text-decoration-line: underline;\n  color: ${({ theme }) => theme.colors.blue};\n  display: inline;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\n\nimport { logIn } from 'redux/auth/operations';\nimport { selectError } from 'redux/auth/selectors';\n\nimport { ReactComponent as OpenEyeIcon } from '../../../images/icons/eye-open.svg';\nimport { ReactComponent as CloseEyeIcon } from '../../../images/icons/eye-closed.svg';\nimport { ReactComponent as CrossIcon } from '../../../images/icons/cross-small.svg';\n\nimport {\n  LogInForm,\n  LogInFormTitle,\n  LogInFormEmailContainer,\n  LogInFormEmailInputContainer,\n  LogInFormInput,\n  ErrorIcon,\n  LogInFormPasswordContainer,\n  LogInFormPasswordInputContainer,\n  ErrorMessage,\n  PasswordIcon,\n  EyeIcon,\n  LoginErrorMessage,\n  LogInBtn,\n  RegisterText,\n  RegisterLink,\n} from './LoginForm.styled';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst fieldValidation = values => {\n  const errors = {};\n  if (!values.email) {\n    errors.email = 'This field is required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = 'Enter a valid Email';\n  }\n\n  if (!values.password) {\n    errors.password = 'This field is required';\n  }\n\n  return errors;\n};\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  const loginError = useSelector(selectError);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    if (loading) {\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await dispatch(logIn(values));\n      if (!loginError) {\n        navigate('/');\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={fieldValidation}\n      validateOnChange={false}\n      onSubmit={handleSubmit}\n    >\n      {({\n        values,\n        errors,\n        setErrors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        resetForm,\n      }) => {\n        const handleFieldChange = e => {\n          const { name } = e.target;\n          setErrors({ ...errors, [name]: '' }); // Clear the error for the specific field\n          handleChange(e);\n        };\n\n        return (\n          <LogInForm onSubmit={handleSubmit}>\n            <LogInFormTitle>Log In</LogInFormTitle>\n            <LogInFormEmailContainer error={errors.email && touched.email}>\n              <LogInFormEmailInputContainer\n                error={errors.email && touched.email}\n                style={{\n                  borderColor:\n                    errors.email && touched.email ? '#F43F5E' : '#54ADFF',\n                }}\n              >\n                <LogInFormInput\n                  type=\"string\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={values.email}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                {errors.email && touched.email && values.email && (\n                  <ErrorIcon\n                    onClick={() => {\n                      resetForm({ values: { ...values, email: '' } });\n                    }}\n                  >\n                    <CrossIcon />\n                  </ErrorIcon>\n                )}\n              </LogInFormEmailInputContainer>\n\n              {errors.email && touched.email && (\n                <ErrorMessage name=\"email\">{errors.email}</ErrorMessage>\n              )}\n            </LogInFormEmailContainer>\n\n            <LogInFormPasswordContainer\n              error={errors.password && touched.password}\n            >\n              <LogInFormPasswordInputContainer\n                error={errors.password && touched.password}\n                style={{\n                  borderColor:\n                    errors.password && touched.password ? '#F43F5E' : '#54ADFF',\n                }}\n              >\n                <LogInFormInput\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={values.password}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                <PasswordIcon onClick={togglePasswordVisibility}>\n                  <EyeIcon error={errors.password && touched.password}>\n                    {showPassword ? <OpenEyeIcon /> : <CloseEyeIcon />}\n                  </EyeIcon>\n                </PasswordIcon>\n              </LogInFormPasswordInputContainer>\n\n              {errors.password && touched.password && (\n                <ErrorMessage name=\"password\">{errors.password}</ErrorMessage>\n              )}\n            </LogInFormPasswordContainer>\n\n            {loginError && (\n              <LoginErrorMessage>{loginError.message}</LoginErrorMessage>\n            )}\n\n            <LogInBtn type=\"submit\" disabled={isSubmitting || loading}>\n              Log In\n            </LogInBtn>\n            <RegisterText>\n              Don't have an account?{' '}\n              <RegisterLink\n                onClick={() => {\n                  navigate('/register');\n                }}\n              >\n                Register\n              </RegisterLink>\n            </RegisterText>\n          </LogInForm>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import styled from 'styled-components';\n\nimport desktop_1x from '../../images/background/bg-desktop@1x.png';\nimport desktop_2x from '../../images/background/bg-desktop@2x.png';\nimport tablet_1x from '../../images/background/bg-tablet@1x.png';\nimport tablet_2x from '../../images/background/bg-tablet@2x.png';\nimport mobile_1x from '../../images/background/bg-mobile@1x.png';\nimport mobile_2x from '../../images/background/bg-mobile@2x.png';\n\nexport const LogInPage = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 80px;\n  height: 100vh;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-image: url('${desktop_1x}');\n\n  @media (min-device-pixel-ratio: 2),\n    (-webkit-min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url('${desktop_2x}');\n  }\n\n  @media screen and (max-width: 1279px) {\n    background-image: url('${tablet_1x}');\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url('${tablet_2x}');\n    }\n  }\n\n  @media screen and (max-width: 767px) {\n    padding-top: 44px;\n    background-image: url('${mobile_1x}');\n\n    @media (min-device-pixel-ratio: 2),\n      (-webkit-min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url('${mobile_2x}');\n    }\n  }\n`;\n\nexport const LoginFormWrapper = styled.div`\n  padding: 60px 75px;\n  width: 608px;\n  height: fit-content;\n  background: #ffffff;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 40px;\n\n  @media screen and (max-width: 767px) {\n    margin: 0 auto;\n    padding: 40px 12px;\n    max-width: 280px;\n\n    box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n    border-radius: 20px;\n  }\n`;\n","import LoginForm from 'shared/components/LoginForm/LoginForm';\nimport { LoginFormWrapper, LogInPage } from './LoginPage.styled';\n\nconst LoginPage = () => {\n  return (\n    <LogInPage>\n      <LoginFormWrapper>\n        <LoginForm />\n      </LoginFormWrapper>\n    </LogInPage>\n  );\n};\n\nexport default LoginPage;\n"],"names":["LogInForm","styled","LogInFormTitle","theme","colors","black","LogInFormEmailContainer","error","LogInFormEmailInputContainer","red","blue","LogInFormPasswordContainer","LogInFormPasswordInputContainer","LogInFormInput","Field","ErrorIcon","ErrorMessage","PasswordIcon","EyeIcon","LoginErrorMessage","LogInBtn","RegisterText","grey","RegisterLink","initialValues","email","password","fieldValidation","values","errors","test","dispatch","useDispatch","useState","showPassword","setShowPassword","loading","setLoading","navigate","useNavigate","loginError","useSelector","selectError","togglePasswordVisibility","handleSubmit","setSubmitting","resetForm","logIn","console","log","validate","validateOnChange","onSubmit","setErrors","touched","handleChange","handleBlur","isSubmitting","handleFieldChange","e","name","target","style","borderColor","type","placeholder","value","onChange","onBlur","disabled","onClick","message","LogInPage","desktop_1x","desktop_2x","tablet_1x","tablet_2x","mobile_1x","mobile_2x","LoginFormWrapper"],"sourceRoot":""}