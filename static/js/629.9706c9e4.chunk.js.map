{"version":3,"file":"static/js/629.9706c9e4.chunk.js","mappings":"ibAYaA,EAAgBC,EAAAA,GAAAA,IAAH,6XAMCC,GAEO,qBAAGC,MAAkBC,YAAYC,MAAjC,GACLC,GAGK,qBAAGH,MAAkBC,YAAYG,OAAjC,GAELC,GAIhBC,EAAQR,EAAAA,GAAAA,GAAH,ugBA6BLS,EAAWT,EAAAA,GAAAA,GAAH,icAyBRU,EAAiBV,EAAAA,GAAAA,IAAH,2FAMdW,EAAQX,EAAAA,GAAAA,IAAH,+RAGAY,EAGER,EAKAS,GAMPC,EAAoBd,EAAAA,GAAAA,IAAH,4PAejBe,EAAOf,EAAAA,GAAAA,KAAH,sB,8BClFjB,MA1BA,WACE,IAAMgB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAClB,EAAD,YACE,SAACgB,EAAD,WACE,UAACP,EAAD,qBAEE,SAACC,EAAD,4CAGJ,SAACC,EAAD,WACE,SAACC,EAAD,CAAOO,IAAI,iBAEb,SAACJ,EAAD,WACE,SAACK,EAAA,EAAD,CACEC,KAAK,SACLC,KAAM,eACNC,MAAM,SAAC,KAAD,CAAcC,KAAK,UACzBC,aAAc,kBAAMR,EAAS,IAAf,QAKvB,C,sECpCKS,E,QAAMzB,GAAAA,OAAH,miCAMA,gBAAGE,EAAH,EAAGA,MAAH,SAAUwB,MACU,EAAjBxB,EAAMyB,MAAM,GAAS,KAAwB,EAAjBzB,EAAMyB,MAAM,GAAS,IADpD,IAGM,qBAAGD,MAAqB,QAAU,OAAlC,IAEF,mBAAgC,EAAhC,EAAGxB,MAAkByB,MAAM,GAAS,IAApC,IAEI,qBAAGzB,MAAkB0B,MAAMC,KAAKC,QAAhC,IACF,qBAAG5B,MAAkB6B,UAAU,EAA/B,IACJ,gBAAG7B,EAAH,EAAGA,MAAH,SAAU8B,OACR9B,EAAM+B,OAAOC,MAAQhC,EAAM+B,OAAOE,IADpC,IAGW,gBAAGjC,EAAH,EAAGA,MAAH,SAAU8B,OACnB9B,EAAM+B,OAAOE,KAAO,aADX,IAEJ,qBAAGH,OAAuB,EAAI,KAA9B,IACA,qBAAG9B,MAAkB+B,OAAOE,IAA5B,IAMU,qBAAGjC,MAAkBkC,WAAWP,IAAhC,IACH,qBAAG3B,MAAkBkC,WAAWP,IAAhC,IACI,qBAAG3B,MAAkBkC,WAAWP,IAAhC,IAIhB,qBAAG3B,MAAkB+B,OAAOC,KAA5B,IAEW,qBAAGF,QAAuB,aAA1B,IAYN,qBAAG9B,MAAkB+B,OAAOI,YAA5B,IAMc,qBAAGnC,MAAkBkC,WAAWP,IAAhC,IASpB,gBAAG3B,EAAH,EAAGA,MAAO8B,EAAV,EAAUA,OAAQM,EAAlB,EAAkBA,MAAlB,OACNN,IAAWM,EAAQpC,EAAM+B,OAAOC,MAAQhC,EAAM+B,OAAOE,IAD/C,IAGE,gBAAGjC,EAAH,EAAGA,MAAH,SAAUoC,OAAqBpC,EAAM+B,OAAOC,KAA5C,IAEe,qBAAGhC,MAAkBkC,WAAWP,IAAhC,IAKjB,gBAAG3B,EAAH,EAAGA,MAAH,SAAUoC,OAAsBpC,EAAM+B,OAAOC,KAA7C,I,UC5BZ,EAtBe,SAAC,GAA8D,IAA5Dd,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,KAAME,EAAyC,EAAzCA,aAAcQ,EAA2B,EAA3BA,OAAQN,EAAmB,EAAnBA,MAAOY,EAAY,EAAZA,MAC/D,OACE,UAACb,EAAD,CACEL,KAAMA,EACNmB,QAASf,EACTQ,OAAQA,EACRN,MAAOA,EACPY,MAAOA,EALT,UAOGjB,EACAC,IAGN,C","sources":["pages/NotFoundPage/NotFoundPage.styled.jsx","pages/NotFoundPage/NotFoundPage.jsx","shared/components/Button/Button.styled.jsx","shared/components/Button/Button.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n// імпорт фонових зображень\nimport bg_mobile from '../../images/background/bg-mobile@2x.png';\nimport bg_tablet from '../../images/background/bg-tablet@2x.png';\nimport bg_desctop from '../../images/background/bg-desktop@2x.png';\n\n// імпорт контентних зображень\nimport mobile from '../../images/notFound/notFound-mobile@2x.png';\nimport tablet from '../../images/notFound/notFound-tablet@2x.png';\nimport desctop from '../../images/notFound/notFound-desktop@2x.png';\n\nexport const MainContainer = styled.div`\n  /* display: flex; */\n  /* flex-direction: column; */\n  width: 100%;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-image: url('${bg_mobile}');\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    background-image: url('${bg_tablet}');\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    flex-direction: row;\n    background-image: url('${bg_desctop}');\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-top: 80px;\n  display: block;\n  align-items: center;\n  justify-content: center;\n\nfont-family: 'Manrope';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 24px;\nline-height: 33px;\ntext-align: center;\n\n@media (min-width: 768px) {\n    display: flex;\n    font-weight: 600;\n    font-size: 32px;\n    line-height: 42px;\n    text-align: inherit;\n  }\n\n@media (min-width: 1280px) {\n    display: flex;\n    font-weight: 600;\n    font-size: 32px;\n    line-height: 42px;\n  }\n`;\n\nexport const Paragraf = styled.h2`\nfont-family: 'Manrope';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 24px;\nline-height: 33px;\ntext-align: center;\n\n@media (min-width: 768px) {\n    display: flex;\n    font-weight: 600;\n    font-size: 32px;\n    line-height: 42px;\n    text-align: inherit;\n    margin-left: 10px;\n  }\n\n@media (min-width: 1280px) {\n    display: flex;\n    font-weight: 600;\n    font-size: 32px;\n    line-height: 42px;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 80px;\n`;\n\nexport const Image = styled.img`\n  width: 280px;\n  height: 123px;\n  content: url('${mobile}');\n\n  @media (min-width: 768px) {\n    content: url('${tablet}');\n    width: 704px;\n    height: 308px;\n  }\n  @media (min-width: 1280px) {\n    content: url('${desctop}');\n    width: 822px;\n    height: 360px;\n  }\n`;\n\nexport const BottomInfoWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 60px;\n\n  @media (min-width: 768px) {\n    margin-top: 68px;\n  }\n  @media (min-width: 1280px) {\n    margin-top: 18px;\n  }\n`;\n\nexport const Span = styled.span``;\n","import Button from '../../shared/components/Button/Button';\nimport React from 'react';\nimport {\n  Image,\n  ImageContainer,\n  Title,\n  Paragraf,\n  BottomInfoWrapper,\n  Span,\n  MainContainer,\n} from './NotFoundPage.styled';\nimport { useNavigate } from 'react-router-dom';\nimport { PawPrintIcon } from 'shared/utils/icons';\n\nfunction NotFoundPage() {\n  const navigate = useNavigate();\n\n  return (\n    <MainContainer>\n      <Span>\n        <Title>\n          Ooops!\n          <Paragraf> This page not found :(</Paragraf>\n        </Title>\n      </Span>\n      <ImageContainer>\n        <Image alt=\"not found\" />\n      </ImageContainer>\n      <BottomInfoWrapper>\n        <Button\n          type=\"button\"\n          text={'To main page'}\n          icon={<PawPrintIcon fill=\"white\" />}\n          clickHandler={() => navigate('/')}\n        ></Button>\n      </BottomInfoWrapper>\n    </MainContainer>\n  );\n}\n\nexport default NotFoundPage;\n","import styled from 'styled-components';\n\nconst Btn = styled.button`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${({ theme, short }) =>\n    short ? theme.space[2] * 2 + 'px' : theme.space[2] * 3 + 'px'};\n\n  min-width: ${({ short }) => (short ? '129px' : '252px')};\n  max-height: 40px;\n  padding: ${({ theme }) => theme.space[2] * 2 + 'px'} 0;\n\n  font-family: ${({ theme }) => theme.fonts.main.semiBold};\n  font-size: ${({ theme }) => theme.fontSizes[2]};\n  color: ${({ theme, filled }) =>\n    filled ? theme.colors.white : theme.colors.blue};\n\n  background-color: ${({ theme, filled }) =>\n    filled ? theme.colors.blue : 'transparent'};\n  border-width: ${({ filled }) => (filled ? 0 : '2px')};\n  border-color: ${({ theme }) => theme.colors.blue};\n  border-style: solid;\n  border-radius: 40px;\n\n  z-index: 2;\n\n  transition: color 300ms ${({ theme }) => theme.transition.main},\n    border-color 300ms ${({ theme }) => theme.transition.main},\n    background-color 300ms ${({ theme }) => theme.transition.main};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.white};\n    border-color: transparent;\n    background-color: ${({ filled }) => filled && 'transparent'};\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n\n    width: 100%;\n    height: 100%;\n\n    background: ${({ theme }) => theme.colors.gradientBlue};\n    border-radius: 40px;\n    opacity: 0;\n\n    z-index: -1;\n\n    transition: opacity 300ms ${({ theme }) => theme.transition.main};\n  }\n\n  &:hover::before,\n  &:focus::before {\n    opacity: 1;\n  }\n\n  & svg {\n    fill: ${({ theme, filled, heart }) =>\n      filled && !heart ? theme.colors.white : theme.colors.blue};\n\n    stroke: ${({ theme, heart }) => heart && theme.colors.white};\n\n    transition: fill 300ms ${({ theme }) => theme.transition.main};\n  }\n\n  &:hover svg,\n  &:focus svg {\n    fill: ${({ theme, heart }) => !heart && theme.colors.white};\n  }\n`;\n\nexport { Btn };\n","import PropTypes from 'prop-types';\nimport { Btn } from './Button.styled';\n\n// - кнопка без іконки з прозорим фоном, при ховері - синій градієнт, довжина 252px (248px):\n// <Button type={type} text=\"Your text\" clickHandler={YourClickHandler} />;\n// пропси type, text та clickHandler є обов'язковими\n\n// - кнопка з іконкою з прозорим фоном, при ховері - синій градієнт, довжина 252px (248px):\n// <Button type={type} text=\"Your text\" clickHandler={YourClickHandler} icon={<YourIcon/>} />;\n\n// - кнопка з іконкою з синім фоном, при ховері - синій градієнт, довжина 252px (248px):\n//<Button type={type} text=\"Your text\" clickHandler={YourClickHandler} icon={<YourIcon />} filled />;\n\n// - кнопка з іконкою з синім фоном, при ховері - синій градієнт, довжина 129px:\n// <Button type={type} text=\"Your text\" clickHandler={YourClickHandler} icon={<YourIcon />} filled short />;\n\n// PROPS\n// - type - функціонал / призначення кнопки;\n// - text - обов'язковий - текст кнопки;\n// - clickHandler - обов'язковий - обробляє подію 'click' на кнопці;\n// - icon - не обов'язковий - отримує React Component, рендериться після тексту кнопки;\n// - filled - не обов'язковий - робить фон кнопки синім у звичайному стані;\n// - short - не обов'язковий - зменшує довжину кнопки з 252px до 129px;\n\nconst Button = ({ type, text, icon, clickHandler, filled, short, heart }) => {\n  return (\n    <Btn\n      type={type}\n      onClick={clickHandler}\n      filled={filled}\n      short={short}\n      heart={heart}\n    >\n      {text}\n      {icon}\n    </Btn>\n  );\n};\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  icon: PropTypes.node,\n  clickHandler: PropTypes.func.isRequired,\n};\n\nexport default Button;\n"],"names":["MainContainer","styled","bg_mobile","theme","breakpoints","tablet","bg_tablet","desktop","bg_desctop","Title","Paragraf","ImageContainer","Image","mobile","desctop","BottomInfoWrapper","Span","navigate","useNavigate","alt","Button","type","text","icon","fill","clickHandler","Btn","short","space","fonts","main","semiBold","fontSizes","filled","colors","white","blue","transition","gradientBlue","heart","onClick"],"sourceRoot":""}