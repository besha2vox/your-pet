{"version":3,"file":"static/js/119.1547f1a7.chunk.js","mappings":"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","sources":["redux/friends/selectors.js","shared/components/Friends/FriendsItem/FriendsItem.styled.jsx","shared/components/Friends/FriendsItem/WorkTimePopup.jsx","shared/components/Friends/FriendsItem/FriendsItem.jsx","shared/components/Friends/FriendsList/FriendsList.styled.jsx","shared/components/Skeleton/FriendsCardSkeleton/FriendsCardSkeleton.styled.jsx","shared/components/Skeleton/FriendsCardSkeleton/FriendsCardSkeleton.jsx","shared/components/Friends/FriendsList/FriendsList.jsx","pages/OurFriendsPage/OurFriendsPage.styled.jsx","pages/OurFriendsPage/OurFriendsPage.jsx","hooks/usePagination.js","shared/components/Pagination/Pagination.styled.jsx","shared/components/Pagination/Pagination.jsx","shared/components/Skeleton/BaseSkeleton.styled.jsx","../node_modules/react-loading-skeleton/dist/index.js"],"sourcesContent":["export const getAllFriends = ({ friends }) => friends.items;\nexport const loading = ({ friends }) => friends.isLoading;\nexport const error = ({ friends }) => friends.error;\n\nexport const getHints = ({ friends }) => ({\n  hints: friends.hints,\n  totalHints: friends.totalHints,\n});\n","import styled from 'styled-components';\n\nconst FriendItem = styled.li`\n  padding: 16px 12px;\n  background-color: #ffffff;\n  box-shadow: ${({ theme }) => theme.boxShadows.main};\n  border-radius: 40px;\n\n  &:hover,\n  :focus {\n    box-shadow: ${({ theme }) => theme.boxShadows.secondary};\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    max-width: 395px;\n    transition: box-shadow 300ms ${({ theme }) => theme.transition.main};\n  }\n`;\n\nconst FriendLinkTitle = styled.a`\n  display: block;\n  margin-bottom: 16px;\n  font-weight: 700;\n  font-size: ${({ theme }) => theme.fontSizes[3]};\n  line-height: 1.35;\n  color: ${({ theme }) => theme.colors.blue};\n  text-align: center;\n  transition: transform 350ms ${({ theme }) => theme.transition.main},\n    color 350ms ${({ theme }) => theme.transition.main};\n\n  :hover,\n  :focus {\n    transform: scale(1.1);\n    color: ${({ theme }) => theme.colors.yellow};\n  }\n`;\n\nconst FriendBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n`;\n\nconst FriendImgBox = styled.img`\n  margin-right: 16px;\n  max-width: 100px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    max-width: 120px;\n    margin-right: 14px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    max-width: 158px;\n    margin-right: 16px;\n  }\n`;\n\nconst FriendInfoBox = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  position: relative;\n`;\n\nconst TextWrapper = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  transition: color 350ms ${({ theme }) => theme.transition.main};\n\n  :not(:last-child) {\n    margin-bottom: 12px;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${({ theme }) => theme.colors.blue};\n  }\n`;\n\nconst WorkTime = styled.p`\n  font: inherit;\n  font-weight: 500;\n  font-size: ${({ theme }) => theme.fontSizes[0]};\n  line-height: 1.34;\n  display: flex;\n  align-items: center;\n  padding: 0;\n  cursor: pointer;\n  border: none;\n  background-color: inherit;\n\n  :focus {\n    color: ${({ theme }) => theme.colors.blue};\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: ${({ theme }) => theme.fontSizes[1]};\n    line-height: 1.36;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    font-size: ${({ theme }) => theme.fontSizes[2]};\n    line-height: 1.38;\n  }\n`;\n\nconst TextTitle = styled.p`\n  display: flex;\n  justify-content: space-between;\n  font: inherit;\n  font-weight: 600;\n  font-size: ${({ theme }) => theme.fontSizes[0]};\n  line-height: 1.34;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: ${({ theme }) => theme.fontSizes[1]};\n    line-height: 1.36;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    font-size: ${({ theme }) => theme.fontSizes[2]};\n    line-height: 1.38;\n  }\n`;\n\nconst Text = styled.p`\n  display: flex;\n  justify-content: space-between;\n  font: inherit;\n  font-size: ${({ theme }) => theme.fontSizes[2]};\n  line-height: 1.34;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: ${({ theme }) => theme.fontSizes[1]};\n    line-height: 1.36;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    font-size: ${({ theme }) => theme.fontSizes[2]};\n    line-height: 1.38;\n  }\n`;\n\nconst ContactLink = styled.a`\n  text-decoration: none;\n  color: inherit;\n  font-weight: 500;\n  font-size: ${({ theme }) => theme.fontSizes[0]};\n  line-height: 1.34;\n\n  :focus {\n    color: ${({ theme }) => theme.colors.blue};\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: ${({ theme }) => theme.fontSizes[1]};\n    line-height: 1.36;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    font-size: ${({ theme }) => theme.fontSizes[2]};\n    line-height: 1.38;\n  }\n`;\n\nconst WorkTimeList = styled.ul`\n  padding: 12px;\n  position: absolute;\n  top: 36px;\n  left: 0;\n  width: 120px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: center;\n  background: #ffffff;\n  border: 1px solid ${({ theme }) => theme.colors.blue};\n  box-shadow: ${({ theme }) => theme.boxShadows.main};\n  border-radius: 8px;\n  color: ${({ theme }) => theme.colors.black};\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    top: 40px;\n    width: 120px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    top: 48px;\n    width: 120px;\n  }\n`;\n\nconst WorkTimeItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 4px;\n  }\n`;\n\nconst WorkTimeItemCurrent = styled.li`\n  color: ${({ theme }) => theme.colors.blue};\n  font-weight: 600;\n\n  :not(:last-child) {\n    margin-bottom: 4px;\n  }\n`;\n\nconst WorkTimeText = styled.p`\n  display: flex;\n  justify-content: space-between;\n  font: inherit;\n  font-size: ${({ theme }) => theme.fontSizes[0]};\n  font-weight: inherit;\n  line-height: 1.34;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: ${({ theme }) => theme.fontSizes[0]};\n    line-height: 1.36;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    font-size: ${({ theme }) => theme.fontSizes[0]};\n    line-height: 1.38;\n  }\n`;\n\nexport {\n  FriendItem,\n  FriendLinkTitle,\n  FriendBox,\n  FriendImgBox,\n  FriendInfoBox,\n  WorkTime,\n  TextTitle,\n  Text,\n  WorkTimeText,\n  ContactLink,\n  TextWrapper,\n  WorkTimeList,\n  WorkTimeItem,\n  WorkTimeItemCurrent,\n};\n","import {\n  WorkTimeList,\n  WorkTimeItem,\n  WorkTimeText,\n  WorkTimeItemCurrent,\n} from './FriendsItem.styled';\nimport { format } from 'date-fns';\n\nconst dayNow = new Date();\nconst dayOfWeek = format(dayNow, 'iiiiii');\n\nconst WorkTimePopup = ({ shedule }) => {\n  const workDays = shedule.map(item =>\n    item.day === dayOfWeek.toUpperCase() ? (\n      <WorkTimeItemCurrent key={item.day}>\n        {item?.isOpen ? (\n          <WorkTimeText>\n            <span>{item.day}</span> {item.from}-{item.to}\n          </WorkTimeText>\n        ) : (\n          <WorkTimeText>\n            <span>{item.day}</span> Closed\n          </WorkTimeText>\n        )}\n      </WorkTimeItemCurrent>\n    ) : (\n      <WorkTimeItem key={item.day}>\n        {item?.isOpen ? (\n          <WorkTimeText>\n            <span>{item.day}</span> {item.from}-{item.to}\n          </WorkTimeText>\n        ) : (\n          <WorkTimeText>\n            <span>{item.day}</span> Closed\n          </WorkTimeText>\n        )}\n      </WorkTimeItem>\n    )\n  );\n  return <WorkTimeList>{workDays}</WorkTimeList>;\n};\n\nexport default WorkTimePopup;\n","import { useState } from 'react';\n\nimport {\n  FriendItem,\n  FriendLinkTitle,\n  FriendBox,\n  FriendImgBox,\n  FriendInfoBox,\n  WorkTime,\n  TextTitle,\n  Text,\n  ContactLink,\n  TextWrapper,\n} from './FriendsItem.styled';\nimport WorkTimePopup from './WorkTimePopup';\nimport defaultFriendImage from './../../../../images/friends/defaultFriendImage.png';\n\nconst dayNow = new Date();\nconst numberOfDay = dayNow.getDay();\n\nexport const FriendsItem = ({\n  title,\n  siteUrl,\n  mapUrl,\n  imageUrl = defaultFriendImage,\n  adress,\n  workDays,\n  phone,\n  email,\n}) => {\n  const [isVisible, setIsVisible] = useState(true);\n\n  const week = ['MN', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n  const newWorkDays =\n    workDays &&\n    workDays.map((day, index) => {\n      return { day: week[index], ...day };\n    });\n\n  return (\n    <FriendItem>\n      <FriendLinkTitle\n        href={siteUrl}\n        target=\"_blank\"\n        rel=\"noreferrer noopener nofollow\"\n      >\n        {title}\n      </FriendLinkTitle>\n      <FriendBox>\n        <FriendImgBox src={imageUrl ?? defaultFriendImage} alt={title} />\n        <FriendInfoBox>\n          <TextWrapper\n            onClick={() => {\n              setIsVisible(!isVisible);\n            }}\n            onMouseLeave={() => {\n              setIsVisible(true);\n            }}\n          >\n            {workDays === null ||\n            workDays === undefined ||\n            workDays.length === 0 ? (\n              <>\n                <TextTitle>Time: </TextTitle>\n                <Text>day and night</Text>\n              </>\n            ) : (\n              <>\n                {workDays[numberOfDay - 1]?.isOpen ? (\n                  <>\n                    <TextTitle>Time:</TextTitle>\n                    <WorkTime>\n                      {workDays[numberOfDay - 1].from}-\n                      {workDays[numberOfDay - 1].to}\n                    </WorkTime>\n                  </>\n                ) : (\n                  <>\n                    <TextTitle>Time:</TextTitle>\n                    <WorkTime>Closed</WorkTime>\n                  </>\n                )}\n                {isVisible || <WorkTimePopup shedule={newWorkDays} />}\n              </>\n            )}\n          </TextWrapper>\n          <TextWrapper>\n            <TextTitle>Adress:</TextTitle>\n            {mapUrl ? (\n              <ContactLink href={mapUrl} target=\"_blank\">\n                {adress}\n              </ContactLink>\n            ) : (\n              <Text>website only</Text>\n            )}\n          </TextWrapper>\n          <TextWrapper>\n            <TextTitle>Email:</TextTitle>\n            {email ? (\n              <ContactLink href={`mailto:${email}`}>{email}</ContactLink>\n            ) : (\n              <Text>website only</Text>\n            )}\n          </TextWrapper>\n          <TextWrapper>\n            <TextTitle>Phone:</TextTitle>\n            {phone ? (\n              <ContactLink href={`tel:${phone}`}>{phone}</ContactLink>\n            ) : (\n              <Text>email only</Text>\n            )}\n          </TextWrapper>\n        </FriendInfoBox>\n      </FriendBox>\n    </FriendItem>\n  );\n};\n","import styled from 'styled-components';\n\nconst FriendList = styled.ul`\n  display: grid;\n\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: 1fr 1fr;\n    gap: 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n\nexport { FriendList };\n","import styled, { keyframes } from 'styled-components';\nimport { BaseSkeleton } from '../BaseSkeleton.styled';\n\nconst opacity = keyframes`\n0%{\n  opacity: 0.5;\n}\n50%{\n  opacity: 1;\n}\n100%{\n  opacity: 0.5;\n}\n`;\n\nexport const FriendItemSkeleton = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: 16px 12px;\n  background-color: #ffffff;\n  box-shadow: ${({ theme }) => theme.boxShadows.main};\n  border-radius: 20px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    border-radius: 40px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    max-width: 395px;\n    transition: box-shadow 300ms ${({ theme }) => theme.transition.main};\n  }\n`;\n\nexport const FriendTitleSkeketon = styled(BaseSkeleton)`\n  display: block;\n  margin: 0 auto;\n\n  height: 27px;\n  width: 80%;\n  border-radius: 20px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    border-radius: 40px;\n  }\n`;\n\nexport const FriendContentWrapperSkeleton = styled.div`\n  display: flex;\n  width: 100%;\n  gap: 16px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    gap: 12px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    gap: 16px;\n  }\n`;\n\nexport const FriendImageWrapperSkeleton = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: fit-content;\n\n  background-color: #fbf0e7;\n\n  & svg {\n    animation: ${opacity} 1s ease infinite;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    width: 120px;\n    border-radius: 40px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    width: 158px;\n  }\n`;\n\nexport const FriendInfoListSkeleton = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 100%;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    gap: 16px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    gap: 12px;\n  }\n`;\n\nexport const FriendInfoItemSkeleton = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 100%;\n`;\n\nexport const FriendInfoTitleSkeleton = styled(BaseSkeleton)`\n  width: 40%;\n  height: 16px;\n  margin: 0;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    height: 20px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    height: 22px;\n  }\n`;\n\nexport const FriendInfoTextSkeleton = styled(BaseSkeleton)`\n  width: 90%;\n  height: 16px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    height: 20px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    height: 22px;\n  }\n`;\n","import { PawprintSkeletonIcon } from 'shared/utils/icons';\nimport {\n  FriendItemSkeleton,\n  FriendTitleSkeketon,\n  FriendContentWrapperSkeleton,\n  FriendImageWrapperSkeleton,\n  FriendInfoListSkeleton,\n  FriendInfoItemSkeleton,\n  FriendInfoTitleSkeleton,\n  FriendInfoTextSkeleton,\n} from './FriendsCardSkeleton.styled';\n\nconst FriendCardSkeleton = ({ count }) => {\n  return Array(count)\n    .fill(0)\n    .map((card, i) => (\n      <FriendItemSkeleton key={i}>\n        <FriendTitleSkeketon inline={true} />\n        <FriendContentWrapperSkeleton>\n          <FriendImageWrapperSkeleton>\n            <PawprintSkeletonIcon />\n          </FriendImageWrapperSkeleton>\n          <FriendInfoListSkeleton>\n            <FriendInfoItemSkeleton>\n              <FriendInfoTitleSkeleton inline={true} />\n              <FriendInfoTextSkeleton inline={true} />\n            </FriendInfoItemSkeleton>\n            <FriendInfoItemSkeleton>\n              <FriendInfoTitleSkeleton inline={true} />\n              <FriendInfoTextSkeleton inline={true} />\n            </FriendInfoItemSkeleton>\n            <FriendInfoItemSkeleton>\n              <FriendInfoTitleSkeleton inline={true} />\n              <FriendInfoTextSkeleton inline={true} />\n            </FriendInfoItemSkeleton>\n            <FriendInfoItemSkeleton>\n              <FriendInfoTitleSkeleton inline={true} />\n              <FriendInfoTextSkeleton inline={true} />\n            </FriendInfoItemSkeleton>\n          </FriendInfoListSkeleton>\n        </FriendContentWrapperSkeleton>\n      </FriendItemSkeleton>\n    ));\n};\n\nexport default FriendCardSkeleton;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { loading } from 'redux/friends/selectors';\n\nimport { FriendsItem } from './../FriendsItem/FriendsItem';\nimport { FriendList } from './FriendsList.styled';\nimport FriendCardSkeleton from 'shared/components/Skeleton/FriendsCardSkeleton/FriendsCardSkeleton';\n\nconst FriendsList = ({ friends }) => {\n  const isLoading = useSelector(loading);\n  const friendsList = friends.map(\n    ({\n      _id,\n      title,\n      url,\n      addressUrl,\n      imageUrl,\n      address,\n      workDays,\n      phone,\n      email,\n    }) => (\n      <FriendsItem\n        key={_id}\n        title={title}\n        siteUrl={url}\n        mapUrl={addressUrl}\n        imageUrl={imageUrl}\n        adress={address}\n        workDays={workDays}\n        phone={phone}\n        email={email}\n      />\n    )\n  );\n\n  return (\n    <>\n      {isLoading && <FriendList>{<FriendCardSkeleton count={9} />}</FriendList>}\n      {!isLoading && <FriendList>{friendsList}</FriendList>}\n    </>\n  );\n};\n\nexport default FriendsList;\n\nFriendsList.defaultProps = {\n  items: [],\n};\n\nFriendsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      addressUrl: PropTypes.string.isRequired,\n      imageUrl: PropTypes.string.isRequired,\n      address: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nconst FriendsPageTitle = styled.h2`\n  text-align: center;\n  font-size: ${({ theme }) => theme.fontSizes[4]};\n  line-height: 1.375;\n  margin: 0;\n  padding: 40px 0 24px 0;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: ${({ theme }) => theme.fontSizes[7]};\n    padding: 80px 0 40px 0;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    font-size: ${({ theme }) => theme.fontSizes[7]};\n    padding: 80px 0 60px 0;\n  }\n`;\n\nconst NoFriendsOnPage = styled.p`\n  text-align: center;\n  font-family: ${({ theme }) => theme.fonts.main.bold};\n  font-size: ${({ theme }) => theme.fontSizes[4]};\n  line-height: 1.375;\n\n  margin: 0;\n\n  padding: 10px 0 10px 0;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: ${({ theme }) => theme.fontSizes[7]};\n    padding: 20px 0 20px 0;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    font-size: ${({ theme }) => theme.fontSizes[7]};\n    padding: 30px 0 30px 0;\n  }\n`;\n\nexport { FriendsPageTitle, NoFriendsOnPage };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport { fetchFriends } from 'redux/friends/operations';\nimport { getHints } from './../../redux/friends/selectors';\n\nimport { useSearchParams } from 'react-router-dom';\n\nimport FriendsList from './../../shared/components/Friends/FriendsList/FriendsList';\nimport Pagination from 'shared/components/Pagination/Pagination';\n\nimport { getAllFriends, loading, error } from './../../redux/friends/selectors';\n\nimport { FriendsPageTitle, NoFriendsOnPage } from './OurFriendsPage.styled';\n\nconst OurFriendsPage = () => {\n  const friends = useSelector(getAllFriends);\n  const [totalPages, setTotalPages] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const isLoading = useSelector(loading);\n  const isError = useSelector(error);\n  const { totalHints, hints } = useSelector(getHints);\n  const dispatch = useDispatch();\n\n  const page = searchParams.get('page') || 1;\n\n  useEffect(() => {\n    if (totalHints) {\n      const pages = Math.ceil(totalHints / hints);\n      setTotalPages(pages);\n    }\n\n    const fetchFriendsList = () => {\n      dispatch(fetchFriends(page));\n    };\n    fetchFriendsList();\n  }, [dispatch, page, totalHints, hints]);\n\n  const onPageChange = currentPage => {\n    if (page === currentPage) {\n      return;\n    }\n    setSearchParams({ page: currentPage });\n  };\n\n  const isFriends = Boolean(friends.length);\n\n  return (\n    <>\n      <FriendsPageTitle>Our Friends</FriendsPageTitle>\n      {isFriends && <FriendsList friends={friends} />}\n      {!isFriends && !isLoading && (\n        <NoFriendsOnPage>No fiends in list</NoFriendsOnPage>\n      )}\n      {isError && (\n        <NoFriendsOnPage>{`${isError}, try again later`}</NoFriendsOnPage>\n      )}\n      <Pagination\n        currentPage={Number(page)}\n        totalPagesCount={totalPages}\n        onPageChange={page => onPageChange(page)}\n      />\n    </>\n  );\n};\n\nexport default OurFriendsPage;\n","import { useMemo } from 'react';\n\nexport const DOTS = '...';\n\nconst range = (start, end) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport const usePagination = ({\n  siblingCount = 1,\n  currentPage,\n  totalPagesCount,\n}) => {\n  const paginationRange = useMemo(() => {\n    const totalPageNumbers = siblingCount + 5;\n\n    if (totalPageNumbers >= totalPagesCount) {\n      return range(1, totalPagesCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPagesCount\n    );\n\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPagesCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPagesCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n\n      return [...leftRange, DOTS, totalPagesCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingCount;\n      let rightRange = range(\n        totalPagesCount - rightItemCount + 1,\n        totalPagesCount\n      );\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n  }, [siblingCount, totalPagesCount, currentPage]);\n\n  return paginationRange;\n};\n","import styled from 'styled-components';\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 60px;\n  \n  flex: 0 1 auto;\n`;\n\nconst PaginationList = styled.ul`\n  display: flex;\n  list-style-type: none;\n  min-width: 310px;\n  height: 52px;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  background-color: #fef9f9;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 45px;\n  padding: 8px 12px;\n  gap: 7px;\n`;\nconst PaginationItem = styled.li`\n  width: 35px;\n  height: 35px;\n  color: ${({ theme }) => theme.colors.blue};\n  display: flex;\n  border: 1px solid ${({ theme }) => theme.colors.lightBlue};\n  border-radius: 50%;\n  align-items: center;\n  justify-content: center;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 15px;\n  line-height: 1.43;\n  transition: all 350ms ${({ theme }) => theme.transition.main};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.blue};\n    color: ${({ theme }) => theme.colors.white};\n    cursor: pointer;\n    svg {\n      stroke: ${({ theme }) => theme.colors.white};\n    }\n  }\n  &.dots:hover {\n    background-color: transparent;\n    color: ${({ theme }) => theme.colors.blue};\n    cursor: default;\n  }\n\n  &.selected {\n    background-color: ${({ theme }) => theme.colors.blue};\n    color: ${({ theme }) => theme.colors.white};\n  }\n  &.disabled {\n    pointer-events: none;\n    background-color: transparent;\n\n    & svg {\n      stroke: ${({ theme }) => theme.colors.lightBlue};\n    }\n  }\n`;\nconst ArrowLeft = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    width: 20px;\n    height: 20px;\n    stroke: ${({ theme }) => theme.colors.blue};\n  }\n`;\n\nconst ArrowRight = styled.div`\n  transform: rotate(180deg);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    width: 20px;\n    height: 20px;\n    stroke: ${({ theme }) => theme.colors.blue};\n  }\n`;\nexport {\n  PaginationList,\n  PaginationContainer,\n  PaginationItem,\n  ArrowLeft,\n  ArrowRight,\n};\n","import { nanoid } from 'nanoid';\nimport { usePagination, DOTS } from '../../../hooks/usePagination';\nimport { ArrowLeftIcon } from 'shared/utils/icons';\n\nimport {\n  PaginationItem,\n  PaginationContainer,\n  ArrowLeft,\n  ArrowRight,\n  PaginationList,\n} from './Pagination.styled';\n\nconst Pagination = ({\n  onPageChange,\n  siblingCount = 1,\n  currentPage,\n  totalPagesCount,\n}) => {\n  const paginationRange = usePagination({\n    currentPage,\n    siblingCount,\n    totalPagesCount,\n  });\n\n  if (currentPage === 0 || paginationRange.length < 2) {\n    return null;\n  }\n\n  const onNext = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  let lastPage = paginationRange[paginationRange.length - 1];\n  return (\n    <PaginationContainer>\n      <PaginationList>\n        <PaginationItem\n          key={nanoid()}\n          className={currentPage === 1 && 'disabled'}\n          onClick={onPrevious}\n        >\n          <ArrowLeft key={'left'}>\n            <ArrowLeftIcon />\n          </ArrowLeft>\n        </PaginationItem>\n        {paginationRange.map(pageNumber => {\n          if (pageNumber === DOTS) {\n            return (\n              <PaginationItem key={nanoid()} className=\"dots\">\n                &#8230;\n              </PaginationItem>\n            );\n          }\n\n          return (\n            <PaginationItem\n              key={nanoid()}\n              className={pageNumber === currentPage && 'selected'}\n              onClick={() => onPageChange(pageNumber)}\n            >\n              {pageNumber}\n            </PaginationItem>\n          );\n        })}\n        <PaginationItem\n          key={nanoid()}\n          className={currentPage === lastPage && 'disabled'}\n          onClick={onNext}\n        >\n          <ArrowRight key={'right'}>\n            <ArrowLeftIcon />\n          </ArrowRight>\n        </PaginationItem>\n      </PaginationList>\n    </PaginationContainer>\n  );\n};\n\nexport default Pagination;\n","import styled, { keyframes } from 'styled-components';\nimport Skeleton from 'react-loading-skeleton';\n\nconst gradient = keyframes`\n0%{\n  background-position: 0 50%;\n}\n50%{\n  background-position: 100% 50%;\n}\n100%{\n  background-position: 0 50%;\n}\n`;\n\nconst BaseSkeleton = styled(Skeleton)`\n  display: flex;\n\n  background: linear-gradient(290.46deg, #c3e0f9 0%, #b3b3b3 107.89%);\n  background-size: 300% 300%;\n\n  animation: ${gradient} 1s ease infinite;\n\n  overflow: hidden;\n`;\n\nexport { BaseSkeleton };\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["getAllFriends","friends","items","loading","isLoading","error","getHints","hints","totalHints","FriendItem","styled","theme","boxShadows","main","secondary","breakpoints","tablet","desktop","transition","FriendLinkTitle","fontSizes","colors","blue","yellow","FriendBox","FriendImgBox","FriendInfoBox","TextWrapper","WorkTime","TextTitle","Text","ContactLink","WorkTimeList","black","WorkTimeItem","WorkTimeItemCurrent","WorkTimeText","dayNow","Date","dayOfWeek","format","workDays","shedule","map","item","day","toUpperCase","isOpen","from","to","numberOfDay","getDay","FriendsItem","title","siteUrl","mapUrl","imageUrl","defaultFriendImage","adress","phone","email","useState","isVisible","setIsVisible","week","newWorkDays","index","href","target","rel","src","alt","onClick","onMouseLeave","undefined","length","FriendList","opacity","keyframes","FriendItemSkeleton","FriendTitleSkeketon","BaseSkeleton","FriendContentWrapperSkeleton","FriendImageWrapperSkeleton","FriendInfoListSkeleton","FriendInfoItemSkeleton","FriendInfoTitleSkeleton","FriendInfoTextSkeleton","count","Array","fill","card","i","inline","FriendsList","useSelector","friendsList","_id","url","addressUrl","address","defaultProps","FriendsPageTitle","NoFriendsOnPage","fonts","bold","totalPages","setTotalPages","useSearchParams","searchParams","setSearchParams","isError","dispatch","useDispatch","page","get","useEffect","pages","Math","ceil","fetchFriends","onPageChange","currentPage","isFriends","Boolean","Pagination","Number","totalPagesCount","DOTS","range","start","end","_","idx","PaginationContainer","PaginationList","PaginationItem","lightBlue","white","ArrowLeft","ArrowRight","siblingCount","paginationRange","useMemo","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","lastPage","className","nanoid","pageNumber","gradient","Skeleton","SkeletonThemeContext","React","_a","_b","_c","Wrapper","wrapper","customClassName","containerClassName","containerTestId","circle","styleProp","style","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","Object","entries","key","styleOptions","baseColor","highlightColor","width","height","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","elements","countCeil","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el"],"sourceRoot":""}